DEFINE PERSON AS {PERSON};
DEFINE ORG AS {ORG};
DEFINE FAC AS {FAC};
DEFINE GPE AS {GPE};
DEFINE LOC AS {LOC};
DEFINE MONEY AS {MONEY};
DEFINE DATE AS {DATE};
DEFINE TIME AS {TIME};

DEFINE AFFILIATION AS [conservative, progressive, centrist, tori, labour];
DEFINE ANIMAL AS [animal, horse, cat, dog, mammal]
DEFINE ARTIFACT AS [artifact, guitar, cycle, bicycle, car, watch, house];
DEFINE AWARD AS [award, prize];
DEFINE DEGREE AS [PhD, BSc, MEng, MSc, master, degree];
DEFINE FIELD AS [field, medicine, theory];
DEFINE MASCOT AS [animal, mammal, puppet];
DEFINE NATIONALITY AS [nationality, italian, english, american];
DEFINE ROLE AS [engineer, doctor, researcher, painter];
DEFINE TEAM AS [team, group, club];
DEFINE UNIVERSITY AS [university, academy, polytechnic];


# Rules for JOB_TITLE

MATCH "PERSON#1 works as a ROLE#2"
CREATE (JOB_TITLE 1 2);

MATCH "PERSON#1 is a ROLE#2"
CREATE (JOB_TITLE 1 2);

MATCH "PERSON#1 becomes a ROLE#2"
CREATE (JOB_TITLE 1 2);


# Rules for VISITED

MATCH "PERSON#1 was at GPE#2"
CREATE (VISITED 1 2);

MATCH "PERSON#1 was at LOC#2"
CREATE (VISITED 1 2);

MATCH "PERSON#1 was at FAC#2"
CREATE (VISITED 1 2);


# Rules for BIRTH_PLACE

MATCH "PERSON#1 was born in GPE#2"
CREATE (BIRTH_PLACE 1 2);

MATCH "PERSON#1 was born at LOC#2"
CREATE (BIRTH_PLACE 1 2);

MATCH "PERSON#1 was born in LOC#2"
CREATE (BIRTH_PLACE 1 2);

MATCH "PERSON#1 was born at FAC#2"
CREATE (BIRTH_PLACE 1 2);


# Rules for BIRTH_DAY

MATCH "PERSON#1 was born in DATE#2"
CREATE (BIRTH_DAY 1 2);

MATCH "PERSON#1 was born during DATE#2"
CREATE (BIRTH_DAY 1 2);


# Rules for MEMBER_OF

MATCH "PERSON#1 is a member of ORG#2"
CREATE (MEMBER_OF 1 2);

MATCH "PERSON#1 becomes a member of ORG#2"
CREATE (MEMBER_OF 1 2);

MATCH "PERSON#1 belongs to ORG#2"
CREATE (MEMBER_OF 1 2);


# Rules for DEATH_DAY

MATCH "PERSON#1 died in DATE#2"
CREATE (DEATH_DAY 1 2);

MATCH "PERSON#1 was killed in DATE#2"
CREATE (DEATH_DAY 1 2);


# Rules for EDUCATION

MATCH "PERSON#1 studied at ORG#2"
CREATE (EDUCATION 1 2);

MATCH "PERSON#1 studied at UNIVERSITY#2"
CREATE (EDUCATION 1 2);

MATCH "PERSON#1 was at the university of GPE#2"
CREATE (EDUCATION 1 2);

MATCH "PERSON#1 received a DEGREE from the university of GPE#2"
CREATE (EDUCATION 1 2);


# Rules for NATIONALITY

MATCH "PERSON#1 is a NATIONALITY#2"
CREATE (NATIONALITY 1 2);


# Rules for EMPLOYER

MATCH "PERSON#1 works at ORG#2"
CREATE (EMPLOYER 2 1);

MATCH "PERSON#1 works for ORG#2"
CREATE (EMPLOYER 2 1);

MATCH "PERSON#1 is employed by ORG#2"
CREATE (EMPLOYER 2 1);

MATCH "PERSON#1 is hired by ORG#2"
CREATE (EMPLOYER 2 1);



# Rules for DEATH_PLACE

MATCH "PERSON#1 died in GPE#2"
CREATE (DEATH_PLACE 1 2);

MATCH "PERSON#1 died at LOC#2"
CREATE (DEATH_PLACE 1 2);

MATCH "PERSON#1 died in LOC#2"
CREATE (DEATH_PLACE 1 2);

MATCH "PERSON#1 died at FAC#2"
CREATE (DEATH_PLACE 1 2);


# Rules for AWARD

MATCH "PERSON#1 won the AWARD#2"
CREATE (AWARD 1 2);


# Rules for FATHER

MATCH "PERSON#1 is the father of PERSON#2"
CREATE (FATHER 1 2);

MATCH "PERSON#1 is PERSON#2's father"
CREATE (FATHER 1 2);


# Rules for BROTHER

MATCH "PERSON#1 is the brother of PERSON#2"
CREATE (BROTHER 1 2);

MATCH "PERSON#1 is PERSON#2's brother"
CREATE (BROTHER 1 2);


# Rules for CHILD

MATCH "PERSON#1 is the son of PERSON#2"
CREATE (CHILD 2 1);

MATCH "PERSON#1 is PERSON#2's son"
CREATE (CHILD 2 1);

MATCH "PERSON#1 is PERSON#2's father"
CREATE (CHILD 2 1);

MATCH "PERSON#1 is PERSON#2's mother"
CREATE (CHILD 2 1);


# Rules for WIFE

MATCH "PERSON#1 is the wife of PERSON#2"
CREATE (WIFE 1 2);

MATCH "PERSON#1 is PERSON#2's wife"
CREATE (WIFE 1 2);

MATCH "PERSON#1 is the husband of PERSON#2"
CREATE (WIFE 2 1);

MATCH "PERSON#1 is PERSON#2's husband"
CREATE (WIFE 2 1);


# Rules for MOTHER

MATCH "PERSON#1 is the mother of PERSON#2"
CREATE (MOTHER 1 2);

MATCH "PERSON#1 is PERSON#2's mother"
CREATE (MOTHER 1 2);


# Rules for POLITICAL_AFFILIATION

MATCH "PERSON#1 is an AFFILIATION#2"
CREATE (POLITICAL_AFFILIATION 1 2);


# Rules for FRIEND

MATCH "PERSON#1 is the friend of PERSON#2"
CREATE (FRIEND 1 2)
CREATE (FRIEND 2 1);

MATCH "PERSON#1 is PERSON#2's friend"
CREATE (FRIEND 1 2)
CREATE (FRIEND 2 1);


# Rules for FOUNDER

MATCH "PERSON#1 is the founder of ORG#2"
CREATE (FOUNDER 1 2);

MATCH "PERSON#1 is the co-founder of ORG#2"
CREATE (FOUNDER 1 2);

MATCH "PERSON#1 founded ORG#2"
CREATE (FOUNDER 1 2);

MATCH "PERSON#1 started ORG#2"
CREATE (FOUNDER 1 2);


# Rules for HUSBAND

MATCH "PERSON#1 is the husband of PERSON#2"
CREATE (HUSBAND 1 2);

MATCH "PERSON#1 is PERSON#2's husband"
CREATE (HUSBAND 1 2);

MATCH "PERSON#1 is the wife of PERSON#2"
CREATE (HUSBAND 2 1);

MATCH "PERSON#1 is PERSON#2's wife"
CREATE (HUSBAND 2 1);


# Rules for SISTER

MATCH "PERSON#1 is the sister of PERSON#2"
CREATE (SISTER 1 2);

MATCH "PERSON#1 is PERSON#2's sister"
CREATE (SISTER 1 2);


# Rules for INVENTOR

MATCH "PERSON#1 invented ARTIFACT#2"
CREATE (INVENTOR 2 1);


# Rules for DISCOVERED

MATCH "PERSON#1 discovered ARTIFACT#2"
CREATE (DISCOVERED 1 2);

MATCH "PERSON#1 discovered FIELD#2"
CREATE (DISCOVERED 1 2);


# Rules for OWNS

MATCH "PERSON#1 has an ARTIFACT#2"
CREATE (OWNS 1 2);

MATCH "PERSON#1 owns an ARTIFACT#2"
CREATE (OWNS 1 2);

MATCH "PERSON#1 buys an ARTIFACT#2"
CREATE (OWNS 1 2);

MATCH "PERSON#1 has an ANIMAL#2"
CREATE (OWNS 1 2);

MATCH "PERSON#1 owns an ANIMAL#2"
CREATE (OWNS 1 2);

MATCH "PERSON#1 buys an ANIMAL#2"
CREATE (OWNS 1 2);


MATCH {}(1), {'type': 'OWNS', 'name': 'r'}(1,2), {}(2)
DELETE r
CREATE (OWNS 1 2);


## RULES FOR ORGANIZATIONS

# Rules for LOGO_IMAGE

MATCH "ORG#1's logo#2"
CREATE (LOGO_IMAGE 1 2);


# Rules for HEADQUARTERS_LOCATION

MATCH "ORG#1's headquarters are in LOC#2"
CREATE (HEADQUARTERS_LOCATION 1 2);

MATCH "ORG#1 is at LOC#2"
CREATE (HEADQUARTERS_LOCATION 1 2);

MATCH "ORG#1 is in GPE#2"
CREATE (HEADQUARTERS_LOCATION 1 2);


# Rules for INDUSTRY

MATCH "ORG#1 is in the industry#2"
CREATE (INDUSTRY 1 2);


# Rules for PRODUCT

MATCH "ORG#1 produces ARTIFACT#2"
CREATE (PRODUCT 1 2);


# Rules for INCEPTION

MATCH "ORG#1 was founded in DATE#2"
CREATE (INCEPTION 1 2);


# Rules for DISSOLVED

MATCH "ORG#1 was dissolved in DATE#2"
CREATE (DISSOLVED 1 2);

MATCH "ORG#1 stopped in DATE#2"
CREATE (DISSOLVED 1 2);


# Rules for FOUNDED_BY

MATCH "ORG#1 was founded by PERSON#2"
CREATE (FOUNDED_BY 1 2);

MATCH "PERSON#1 started ORG#2"
CREATE (FOUNDED_BY 2 1);


# Rules for LOCATION_OF_FORMATION

MATCH "PERSON founded ORG#1 in GPE#2"
CREATE (LOCATION_OF_FORMATION 1 2);

MATCH "PERSON started ORG#1 in GPE#2"
CREATE (LOCATION_OF_FORMATION 1 2);


# Rules for LEAGUE

MATCH "TEAM plays in the LEAGUE#2"
CREATE (LEAGUE 1 2);


# Rules for TEAM_CAPTAIN
MATCH "PERSON#1 is the captain of the TEAM#2"
CREATE (TEAM_CAPTAIN 1 2);


# Rules for MASCOT
MATCH "MASCOT#1 is the mascot of the TEAM#2"
CREATE (MASCOT 1 2);


# Rules for CEO
MATCH "PERSON#1 is the CEO of ORG#2"
CREATE (CEO 1 2);

MATCH "PERSON#1 is ORG#2's CEO"
CREATE (CEO 1 2);


# Rules for TOTAL_REVENUE
MATCH "ORG#1 has a revenue of MONEY#2"
CREATE (TOTAL_REVENUE 1 2);


## GENERIC WIKIDATA RULES

# Rules for INSTANCE_OF

MATCH "ORG#1 is a business#2"
CREATE (INSTANCE_OF 1 2);

MATCH "DEGREE#1 is a DEGREE#2"
CREATE (INSTANCE_OF 1 2);

MATCH "UNIVERSITY#1 is a UNIVERSITY#2"
CREATE (INSTANCE_OF 1 2);


# Rules for SUBCLASS_OF

MATCH "ANIMAL#1 is an ANIMAL#2"
CREATE (INSTANCE_OF 1 2);

MATCH "ARTIFACT#1 is an ARTIFACT#2"
CREATE (INSTANCE_OF 1 2);
